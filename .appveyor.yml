platform: x64
image: Visual Studio 2017

environment:
  CONDA_ROOT: "C:\\Miniconda37-x64"
  CONDA_INSTRUMENTATION_ENABLED: "true"

artifacts:
  # Store built conda packages as artifacts
  - path: 'conda_packages\*.bz2'


install:
  - CALL %CONDA_ROOT%\Scripts\activate.bat
  - conda config --set always_yes yes --set changeps1 no
  - appveyor-retry conda install conda-build anaconda-client
  - conda update -q conda
  - conda config --add channels conda-forge
  - conda config --set show_channel_urls true
  - conda info
  - conda init cmd.exe

  - set "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.1"
  - IF NOT EXIST "%CUDA_PATH%" set CUDA_INSTALL=1
  - IF DEFINED CUDA_INSTALL appveyor DownloadFile http://developer.download.nvidia.com/compute/cuda/10.1/Prod/network_installers/cuda_10.1.243_win10_network.exe
  - IF DEFINED CUDA_INSTALL cuda_10.1.243_win10_network.exe -s
  - set PATH=%CUDA_PATH%\bin;%PATH%
  
build_script:
  - CALL "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - set "CUDA_VERSION=10.1"
  - conda build conda-recipe
  # copy any newly created conda packages into the conda_packages dir
  - mkdir conda_packages
  # make any conda packages created available as build artifacts in AppVeyor
  - 'copy /Y %CONDA_ROOT%\conda-bld\win-64\*.bz2 conda_packages || cmd /c "exit /b 0"'

deploy_script:
  # on:
  #   branch: master
  - IF "%APPVEYOR_REPO_TAG%"==true (
      set LABEL='main'
    ) ELSE (
      set LABEL='dev'
    )
  - anaconda --verbose --token %CONDA_UPLOAD_TOKEN% upload "%CONDA_ROOT%\conda-bld\win-64\*.tar.bz2" -u talley --force --label %LABEL%
